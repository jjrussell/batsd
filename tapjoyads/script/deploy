#!/usr/bin/env ruby

require 'yaml'

SERVER_CONFIG_FILENAME = 'server/configuration.yaml'

def prompt_and_exit_if_not_yes
  answer = STDIN.gets
  if !/^y/i.match(answer)
    exit
  end
end

def print_usage_and_exit
  puts "USAGE: script/deploy [<environment>] [<version>]"
  puts "  environment is either 'production' or 'test'. Default is test."
  puts "  version can be 'trunk', or a specific version number. If left blank, a new version will be created."
  exit
end

environment = ARGV[0] # 'production' or 'testing'
version_number = ARGV[1] # 'trunk' or a deploy number
svn_repo = File.exist?('.svn/')

if environment == 'production'
  puts "PRODUCTION deploy"
  server_groups = 'webserver jobserver masterjobs'
else
  puts "TESTING deploy"
  server_groups = 'testserver'
end

unless server_groups
  print_usage_and_exit
end

puts "\nUpdating local svn"
if svn_repo
  puts `svn update`
else
  puts `git svn rebase`
end

unless version_number
  settings = YAML::load_file(SERVER_CONFIG_FILENAME)

  version_number = settings['config']["api_deploy_version"].to_i
  
  if environment == 'production'
    version_number += 1
    print "No deploy version number specified. Create new deploy version #{version_number}? [y/N] "
    prompt_and_exit_if_not_yes
  
    
    settings['config']["api_deploy_version"] = version_number.to_s
  
    File.open(SERVER_CONFIG_FILENAME, 'w') do |f|
      f.write(settings.to_yaml)
    end
  
    puts "Creating new deploy branch."
    system("svn copy https://tapjoy.unfuddle.com/svn/tapjoy_tapjoyads/trunk " +
       "https://tapjoy.unfuddle.com/svn/tapjoy_tapjoyads/deploy/#{version_number} " +
       "-m \"Creating deploy branch #{version_number}\"")
       
    puts "Incrementing version in config file."
    if svn_repo
      system("svn commit #{SERVER_CONFIG_FILENAME} -m 'Incrementing config version number to #{version_number}'")
    else
      system("git add #{SERVER_CONFIG_FILENAME}")
      system("git commit -m 'Incrementing config version number to #{version_number}'")
      system("git svn dcommit")
    end
  end
end

# Must use the system command to run, not backticks, otherwise it will be non-interactive.
system("script/cloudrun '#{server_groups}' 'cd server && svn update && ./deploy.rb #{version_number}' 'webuser'")

puts "Done deploying: #{Time.now}"