- @page_title = 'Partner'

%h1 Partner data - #{@partner.name}

= link_to("Edit", edit_partner_path(@partner))

= render 'make_current_button', :partner => @partner

.metadata Name: #{@partner.name}
.metadata Contact name: #{@partner.contact_name}
.metadata Contact phone: #{@partner.contact_phone}
.metadata Contact email(s):
%ul
  - @partner.users.each do |user|
    %li
      %span.email= user.email
      = image_tag('mailchimp.png', :class => "mail_chimp_button", :title => "Subscriber status")
      .mail_chimp_info.hidden
        = image_tag 'load-circle.gif'
.metadata Balance: #{number_to_currency(@partner.balance / 100.0)}
.metadata Pending Earnings: #{number_to_currency(@partner.pending_earnings / 100.0)}
.metadata Payout Frequency: #{@partner.payout_frequency}
.metadata Created: #{@partner.created_at.to_s(:db)}
- if permitted_to?(:edit, :partners)
  .metadata Account managers: #{@partner.account_managers.map{|u| u.username}.join(', ')}
  .metadata Internal notes: #{@partner.account_manager_notes}
  .metadata
    Current Offer Discount: 
    = number_to_currency(@partner.premier_discount * 0.01)
    = "(#{link_to('edit', partner_offer_discounts_path(@partner))})"
  .metadata
    Current Exclusivity Level:
    = @partner.exclusivity_level_type || "None"
  .metadata
    Exclusivity Expires On:
    = @partner.exclusivity_expires_on ? @partner.exclusivity_expires_on.to_s(:pub) : "N/A"

.clear

%table#apps_table.tablesorter
  %thead
    %tr
      %th Icon
      %th Offer
      %th Type
      %th Price
      %th Payment
      %th TJ Enabled
      %th Platform
  %tbody
    - @partner.offers.each do |offer|
      %tr
        %td.icon= image_tag(offer.get_icon_url(request.protocol), :size => '57x57')
        %td= link_to_offer(offer)
        %td= offer.item_type
        %td= number_to_currency(offer.price / 100.0)
        %td= number_to_currency(offer.payment / 100.0)
        %td= offer.tapjoy_enabled
        %td= offer.get_platform

- content_for :page_javascript do
  :plain
    $(function($) {
      $.tablesorter.addParser({
        id: 'currency-column',
        is: function(s) { return false; },
        type: 'numeric',
        format: function(s) {
          return s.replace(/\$/g, '').replace(/,/g, '');
        }
      });
      $("#apps_table").tablesorter({
        widgets: ['zebra'],
        headers: {
          0: { sorter: false },
          3: { sorter: 'currency-column' },
          4: { sorter: 'currency-column' }
        },
        sortList: [ [1, 0] ]
      });
      $('.mail_chimp_button').click(function(){
        if ($(this).siblings('div').is(':hidden')) {
          var div = $(this).siblings('div');
          div.show();
          var email = $(this).siblings('span.email').text();
          console.log(email);
          var url = '/partners/mail_chimp_info/;';
          $.get(url, {email: email}, function(data){
            div.children('img').hide();
            div.append("Subscriber?: " + data.subscribed);
            div.append("<br/>Can email?: " + data.can_email);
          });
        }
      });
    });

- content_for :page_styles do
  :plain
    table.tablesorter {
      border-collapse: separate;
    }
    th,
    td,
    .icon img {
      border: 0;
    }
    .box {
      width: 45%;
    }
    img.mail_chimp_button {
      cursor: pointer;
    }
