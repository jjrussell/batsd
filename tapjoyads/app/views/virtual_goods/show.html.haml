= render :partial => 'shared/dropdown_select', :locals => {:objects => current_partner_apps, :selected => @app}
= render :partial => 'apps/actions', :locals => {:app => @app}

#content-with-links
  %h2= @page_title

  - if @virtual_good.has_icon
    .icon= image_tag(@virtual_good.icon_url('https://'), :size => '57x57')

  - form_for(:virtual_good, @virtual_good, :url => { :action => @form_action }, :html => { :method => @form_method, :multipart => true, :class => 'tjform' }) do |f|
    %table
      %tbody
        %tr
          %th
            = f.label(:name)
            #help_name.help ?
          %td
            = f.text_field(:name)
        %tr
          %th
            = f.label(:title, "Type")
            #help_type.help ?
          %td
            = f.text_field(:title)
        %tr
          %th
            = f.label(:description)
            #help_description.help ?
          %td
            = f.text_field(:description)
        %tr
          %th
            = f.label(:price)
            #help_price.help ?
          %td
            = f.text_field(:price)
        %tr
          %th
            = f.label(:max_purchases)
            #help_max_purchases.help ?
          %td
            = f.text_field(:max_purchases)
        %tr
          %th
            = f.label(:icon)
            #help_icon.help ?
          %td
            = f.file_field(:icon, :accept => "image/png")
            (Optional)
        %tr
          %th
            = f.label(:data)
            #help_data.help ?
          %td
            = f.file_field(:data)
            (Optional)
        %tr
          %th
            = f.label(:beta)
            #help_beta.help ?
          %td
            = f.check_box(:beta)
        %tr
          %th
            = f.label(:disabled)
            #help_disabled.help ?
          %td
            = f.check_box(:disabled)
    %p &nbsp;
    %h3
      Custom fields (Optional):
      #help_custom_field.help ?
    %table
      %tbody
        %tr
          %th{:style => 'text-align:center;'}
            Field name
          %th{:style => 'text-align:center;'}
            Value
        - if @virtual_good.blank?
          - 5.times do
            - field_name = "virtual_good[extra_attributes][#{key}]"
            %tr
              %th
                = label_tag field_name, key
              %td
                = text_field_tag field_name, attr
        - else
          - i = 0
          - @virtual_good.extra_attributes.each do |key, attr|
            - i += 1
            - key_field_name = "virtual_good[extra_attributes][keys][]"
            - attr_field_name = "virtual_good[extra_attributes][attrs][]"
            - id = "virtual_good_extra_attributes_values_#{i}"
            %tr
              %th
                .custom_field_name_label= key
                = text_field_tag key_field_name, key, :id => id, :class => 'hidden custom_field_name_input'
              %td
                = text_field_tag attr_field_name, attr
          - (5 - @virtual_good.extra_attributes.length).times do
            - i += 1
            - key_field_name = "virtual_good[extra_attributes][keys][]"
            - attr_field_name = "virtual_good[extra_attributes][attrs][]"
            - id = "virtual_good_extra_attributes_values_#{i}"
            %tr
              %th
                .hidden.custom_field_name_label &nbsp;
                = text_field_tag key_field_name, '', :id => id, :class => 'custom_field_name_input'
              %td
                = text_field_tag attr_field_name, '', :id => id
        %tr
          %td &nbsp;
          %td= f.submit

    .hidden
      #help_name_content{:name => 'Name'}
        The name of this virtual good
      #help_type_content{:name => 'Type'}
        Define a new virtual good type
        - unless @virtual_good_types.blank?
          or choose from one you have previously defined:
          %ul
            - @virtual_good_types.keys.each do |key|
              %li
                = link_to key, 'javascript:$.noop();', :class => 'extra_attribute_key'
      #help_description_content{:name => 'Description'}
        Description that will appear with this virtual good
      #help_price_content{:name => 'Price'}
        Price in #{@app.currency.name} for this virtual good
      #help_max_purchases_content{:name => 'Maximum Purchases'}
        Maximum number of times a user can purchase this item.
      #help_icon_content{:name => 'Icon'}
        Maximum file size is 200KB and maximum dimension is 100x200 pixels.
      #help_data_content{:name => 'Data'}
        Zip file to download with the virtual good. Maximum file size is 200KB.
      #help_beta_content{:name => 'Beta Items'}
        Items marked as "beta" will only be visible to devices marked as
        = link_to "virtual currency beta user.", app_currency_path({:app_id => @app.id, :id => @app.currency.id})
      #help_disabled_content{:name => 'Disabled Items'}
        Items marked as "disabled" will not be visible to anyone.
      #help_custom_field_content{:name => 'Custom Fields'}
        Up to 5 custom fields can be defined. Please specify field names (e.g. "Country") and field values (e.g. "United States")
- content_for :page_styles do
  :plain
    .icon {
      float: left;
    }
    .extra_attribute_key {
      color: blue;
      text-decoration: underline;
      cursor: pointer;
    }
    .custom_field_name_label:hover {
      cursor: pointer;
      border: 1px solid transparent;
    }
    .custom_field_name_label:hover {
      border: 1px solid #aaa;
    }
- content_for :page_javascript do
  :plain
    $(function($){
      $('.icon').click(function(){
        $('#virtual_good_icon').click();
      });

      var types = #{ @virtual_good_types.keys.to_json };
      var select = function(event, data){
        if (data.item) data = data.item.value;
      };
      $('#virtual_good_title').autocomplete({ source: types, delay: 100, select: select});
      $('.extra_attribute_key').click(function(){
        var data = $(this).text();
        $('#virtual_good_title').val(data);
        select(null, data);
      });
      $('.custom_field_name_label').click(function(){
        $(this).hide().siblings('.custom_field_name_input').show().focus();
      });
      $('.custom_field_name_input').blur(function(){
        if ($(this).val() != '') {
          $(this).hide().siblings('.custom_field_name_label').text($(this).val()).show();
        }
      });
    });
