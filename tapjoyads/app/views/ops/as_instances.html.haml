- lb_name = @lb_name
- @lb_instances[lb_name].each do |lb_instance|
  - ec2_instance = @ec2_instances[lb_instance[:instance_id]] || {}
  %div{:id => "#{lb_instance[:instance_id]}_details"}
    %table.tablesorter
      %thead
        %tr
          %th{ :colspan => "3" }
            %a{ :href => "ssh://ubuntu@#{ec2_instance[:dns_name]}" }= ec2_instance[:dns_name]
      %tbody
        %tr{ :class => cycle('', 'odd', :name => 'instances') }
          %td= lb_instance[:instance_id]
          %td= lb_instance[:state]
          %td= ec2_instance[:aws_state]
        - unless lb_instance[:description] == "N/A"
          %tr{ :class => cycle('', 'odd', :name => 'instances') }
            %td{ :colspan => "3" }= lb_instance[:description]
        %tr
          %td{ :colspan => "3", :style => "text-align: right"}
            actions Â»
            = link_to 'deregister', elb_deregister_instance_ops_path(:instance_id => lb_instance[:instance_id], :lb_name => lb_name), :class => 'get'
            = link_to 'reboot', ec2_reboot_instance_ops_path(:instance_id => lb_instance[:instance_id]), :class => 'get'
            = link_to 'replace', as_terminate_instance_ops_path(:instance_id => lb_instance[:instance_id], :as_group => @as_group[:auto_scaling_group_name]), :class => 'get'
            = link_to 'remove', as_terminate_instance_ops_path(:instance_id => lb_instance[:instance_id], :as_group => @as_group[:auto_scaling_group_name], :decrement_capacity => true), :class => 'get'
      - reset_cycle('instances')

= javascript_tag "ajaxLinks()"
