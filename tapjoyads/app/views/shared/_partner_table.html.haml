- all_account_managers = User.account_managers
- all_sales_reps = User.sales_reps

%br
- unless current_user.role_symbols.include?(:agency)
  = form_tag(search_path, :method => :get, :class => 'tjform') do
    = hidden_field_tag(:agency_user, agency_user)
    %table
      %tbody
        %tr
          %td= label_tag(:q, "Name or Email:")
          %td= label_tag(:country, 'Managed by:')
          %td= label_tag(:country, 'Country:')
          %td
        %tr
          %td= text_field_tag(:q, params[:q], :size => '40')
          %td
            - managers = options_for_select(@account_managers, params[:managed_by])
            = select_tag('managed_by', managers)
          %td
            - countries = options_for_select(list_of_countries, @country || nil)
            = select_tag('country', countries, :include_blank => true)
          %td= submit_tag('Search')

%table#partners_table.tablesorter
  %thead
    %tr
      %th Name
      %th Contact
      - if current_user.is_one_of?([:admin, :account_mgr])
        %th Account Manager
        %th Sales Rep
      %th Balance
      %th
        Pending
        %br/
        Earnings
      %th{ :class => params[:q].blank? ? 'up_arrow' : '' } Created
      %th Premier
      %th Offers
      %th Country
  %tbody
    - if partners.empty?
      %tr
        %td No partners found
        %td -
        %td -
        %td -
        %td -
        %td -
        %td -
        %td -
        %td -
        %td -

    - partners.each do |partner|
      %tr{ :class => cycle('even', 'odd') }
        - users = partner.users.group_by{|user| all_account_managers.include?(user)}
        - account_managers = users[true] || []
        - non_managers = users[false] || []
        %td.nowrap= link_to(partner.name || 'Unknown', partner_path(partner))
        %td
          = non_managers.map(&:email).join(', ')
          %br/
          = partner.contact_phone
          %br/
          = form_tag(make_current_partner_path(partner)) do
            - if current_partner == partner
              = submit_tag("Acting as this partner", :class => 'act_as_button', :disabled => true)
            - else
              = submit_tag("Act as this partner", :class => 'act_as_button')
        - if current_user.is_one_of?([:admin, :account_mgr])
          %td.account_manager
            = form_for(partner) do |f|
              - options = options_from_collection_for_select(all_account_managers, "id", "email", account_managers.map(&:id))
              = f.select :account_managers, options, {:include_blank => '(no one)'}
            = image_tag 'load-circle.gif', :class => 'hidden'
            .message.hidden
          %td.sales_rep
            = form_for(partner) do |f|
              - sales_rep_email = partner.sales_rep ? partner.sales_rep.email : ''
              - options = options_from_collection_for_select(all_sales_reps, "email", "email", sales_rep_email)
              = f.select :sales_rep, options, {:include_blank => '(no one)'}
            = image_tag 'load-circle.gif', :class => 'hidden'
            .message.hidden

        %td= number_to_currency(partner.balance / 100.0)
        %td= number_to_currency(partner.pending_earnings / 100.0)
        %td.nowrap= partner.created_at.to_s(:pub)
        %td= partner.is_premier? ? "#{partner.premier_discount}%" : "false"

        %td
          - partner.offers.each do |o|
            .offer
              = image_tag(o.get_icon_url, :size => '20x20')
              = link_to_offer(o)
              - if o.tapjoy_enabled? || o.user_enabled?
                = '(' + (o.tapjoy_enabled? ? 'T' : '') + (o.user_enabled? ? 'U' : '') + ')'

        %td.country
          = form_for(partner) do |f|
            - countries = options_for_select(list_of_countries, partner.country || nil)
            = f.select('country', countries, :include_blank => true)
          = image_tag 'load-circle.gif', :class=>'hidden'
          .message.hidden


- content_for :page_styles do
  :plain
    table.tablesorter {
      border-collapse: separate;
    }
    table.tablesorter th.up_arrow {
      background-position: 100% 50%;
      background-repeat: no-repeat;
      background-image: url(/stylesheets/themes/blue/asc.gif);
      background-color: #8DBDD8;
    }
    .offer {
      display: inline-block;
      padding-right: 10px;
      padding-top: 5px;
    }
    .nowrap {
      white-space: nowrap;
    }
    .act_as_button {
      font-size: 10px!important;
      padding:2px!important;
    }
    .agency {
      color: red;
    }
    label {
      padding-top: 10px;
      padding-left: 3px;
    }

- content_for :page_javascript do
  :plain
    $(function($){
      $('td.account_manager select,td.sales_rep select, td.country select').change(function(){
        var form = $(this).parent('form');
        var url = form.attr('action');
        var key = $(this).attr('name');
        var data = {};
        data[key] = [$(this).val()];
        form.siblings('img').show();

        $.ajax({
          data: data,
          type: 'put',
          url: url
        });

        $(form).ajaxComplete(function(e,xhr,settings) {
          $(this).siblings('img').hide();

          var rsp = xhr.getResponseHeader('X-Message');
          $(this).siblings('.message').show().text(rsp);
          $(this).siblings('.message').fadeOut(8000);

        });
      });

      $('#q').autocomplete({
        source: '#{search_partners_path}',
        delay: 250,
        minLength: 2,
        select: function(event, ui) {
          location.href = '#{partners_path}/' + ui.item.partner_id;
        },
      });
    });

