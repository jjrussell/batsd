- timeframe = @timeframe == '7_days' ? '7 days' : @timeframe == '1_month' ? '30 days' : '24 hours'
- @page_title = "Stats for last #{timeframe}"

%h1 Stats for last #{timeframe}

%ul.timeframes
  %li= @timeframe == '24_hours' ? '24 hours' : link_to('24 hours', statz_index_path)
  %li= @timeframe == '7_days' ? '7 days' : link_to('7 days', statz_index_path(:timeframe => '7_days'))
  %li= @timeframe == '1_month' ? '30 days' : link_to('30 days', statz_index_path(:timeframe => '1_month'))

.tjform
  = label_tag('search_box', 'Offer Name:')
  = text_field_tag('search_box', '', :size => '40')

#money_totals
  .last_updated Totals Last Updated: #{@money_last_updated.to_s(:pub_ampm_sec)}
  %h3
    %table
      %tr
        %td Total conversions: #{@money_stats[@timeframe]['conversions']} &nbsp;
        %td Total revenue: #{@money_stats[@timeframe]['revenue']} &nbsp;
        %td Total payouts: #{@money_stats[@timeframe]['publisher_earnings']}
      %tr
        %td Android conversions: #{@money_stats[@timeframe]['android_conversions']} &nbsp;
        %td Android Adv. Spend: #{@money_stats[@timeframe]['android_adv_spend']} &nbsp;
        %td Android Payouts: #{@money_stats[@timeframe]['android_pub_earnings']}
      %tr
        %td iOS conversions: #{@money_stats[@timeframe]['ios_conversions']} &nbsp;
        %td iOS Adv. Spend: #{@money_stats[@timeframe]['ios_adv_spend']} &nbsp;
        %td iOS Payouts: #{@money_stats[@timeframe]['ios_pub_earnings']}
%p
  = link_to "Global Network Stats", global_statz_path
  - if permitted_to? :publisher, :statz
    |
    = link_to("Publisher Stats", publisher_statz_path)
  - if permitted_to? :advertiser, :statz
    |
    = link_to("Advertiser Stats", advertiser_statz_path)

.last_updated Last Updated: #{@last_updated.to_s(:pub_ampm_sec)}

%table#apps_table.tablesorter
  %thead
    %tr
      %th
        %a{ :id => 'toggle_icons', :href => '#' } Icon
      %th Offer
      %th{ :class => 'headerSortUp header' } Conversions
      %th Connects
      %th Store rank
      %th Price
      %th Payment
      %th Balance
      %th Platform
      %th CVR
      %th Published offers
      %th Offers revenue
      %th Featured
      %th Offer type
    %tr
      %td.filter#filters_title{:colspan => 2}
        %b Filters
        (#{link_to('reset all', '#', :id => 'reset_filters')})
      %td.filter= select_tag('conversions_filter', options_for_select(filter_options(:check_zero)))
      %td.filter= select_tag('connects_filter', options_for_select(filter_options(:check_zero)))
      %td.filter= select_tag('rank_filter', options_for_select(filter_options(:rank)))
      %td.filter= select_tag('price_filter', options_for_select(filter_options(:free)))
      %td.filter= select_tag('payment_filter', options_for_select(filter_options(:money)))
      %td.filter &nbsp;
      %td.filter= select_tag('platform_filter', options_for_select(filter_options(:platform)))
      %td.filter= select_tag('cvr_filter', options_for_select(filter_options(:cvr)))
      %td.filter= select_tag('published_offers_filter', options_for_select(filter_options(:check_zero)))
      %td.filter= select_tag('revenue_filter', options_for_select(filter_options(:money)))
      %td.filter= select_tag('featured_filter', options_for_select(filter_options(:featured)))
      %td.filter= select_tag('offer_type_filter', options_for_select(filter_options(:offer_type)))
  %tbody#apps_tbody
    - @cached_stats.each do |offer_id, stats|
      %tr
        %td
          %img.icon.hidden{ :s => stats['icon_url'] }
        %td= link_to(stats['offer_name'], statz_path(offer_id))
        %td= stats['conversions']
        %td= stats['connects']
        %td= stats['overall_store_rank']
        %td= stats['price']
        %td= stats['payment']
        %td= stats['balance']
        %td= stats['platform']
        %td= stats['conversion_rate']
        %td= stats['published_offers']
        %td= stats['offers_revenue']
        %td= stats['featured']
        %td= stats['offer_type']

- content_for :page_javascript do
  :plain
    $(function() {
      $('#search_box').autocomplete({ source: '#{search_offers_path}', delay: 250, minLength: 2, select: function(event, ui) { window.location.assign(ui.item.url); } });

      $.tablesorter.addParser({
        id: 'currency-column',
        is: function(s) { return false; },
        type: 'numeric',
        format: function(s) {
          return s.replace(/\$/g, '').replace(/,/g, '');
        }
      });
      $.tablesorter.addParser({
        id: 'rank-column',
        is: function(s) { return false; },
        type: 'numeric',
        format: function(s) {
          return s.replace(/-/g, '999999');
        }
      });
      $.tablesorter.addParser({
        id: 'formatted-number-column',
        is: function(s) { return false; },
        type: 'numeric',
        format: function(s) {
          return s.replace(/,/g, '');
        }
      });
      $("#apps_table").tablesorter({
        widgets: ['zebra'],
        headers: {
          0:  { sorter: false },
          2:  { sorter: 'formatted-number-column' },
          3:  { sorter: 'formatted-number-column' },
          4:  { sorter: 'rank-column' },
          5:  { sorter: 'currency-column' },
          6:  { sorter: 'currency-column' },
          7:  { sorter: 'currency-column' },
          10: { sorter: 'formatted-number-column' },
          11: { sorter: 'currency-column' }
        }
      });

      var iconsLoaded = false;
      var iconsVisible = false;
      $('#toggle_icons').click(function() {
        if (iconsVisible) {
          $('img.icon').hide();
          iconsVisible = false;
        } else {
          if (!iconsLoaded) {
            $('img.icon').each(function() {
              $(this).attr('src', $(this).attr('s'));
            });
            iconsLoaded = true;
          }
          $('img.icon').show();
          iconsVisible = true;
        }
        return false;
      });

      // helper functions
      var showAll = function(){
        $('tr').show();
      };
      var checkEqual = function(val, col, checkInequality){
        if (val) {
          $('td:nth-child('+col+'):not(.filter)').each(function(i,td){
            if (checkInequality) {
              if($(td).text() == val){
                $(td).parent().hide();
              }
            } else {
              if($(td).text() != val){
                $(td).parent().hide();
              }
            }
          });
        }
      };
      var checkZero = function(val, col) {
        if ((val || val == 0) && val != '') {
          checkEqual('0', col, (val == '>0'));
        } else {
        }
      };

      $('#reset_filters').click(function(){
        $('.filter select').each(function(i,select){
          $(select).val('');
        });
        showAll();
        return false;
      });
      $('.filter select').change(function(){
        showAll();

        // conversion
        var conversions = $('select#conversions_filter').val();
        checkZero(conversions, 3);

        // connects
        var connects = $('select#connects_filter').val();
        checkZero(connects, 4);

        // rank
        var rank = $('select#rank_filter').val();
        if (rank) {
          checkEqual('-', 5, (rank == 'ranked'));
        }

        // price
        var price = $('select#price_filter').val();
        if (price) {
          checkEqual('$0.00', 6, (price == 'Paid'));
        }

        // payment
        var payment = $('select#payment_filter').val();
        if (payment) {
          checkEqual('$0.00', 7, (payment == '>$0'));
        }

        // platform
        var platform = $('select#platform_filter').val();
        checkEqual(platform, 9);

        // cvr
        var cvr = $('select#cvr_filter').val();
        if (cvr) {
          checkEqual('0.0%', 10, (cvr == '>0%'));
        }

        // published offers
        var publishedOffers = $('select#published_offers_filter').val();
        checkZero(publishedOffers, 11);

        // offers revenue
        var revenue = $('select#revenue_filter').val();
        if (revenue) {
          checkEqual('$0.00', 12, (revenue == '>$0'));
        }

        // featured
        var val = $('select#featured_filter').val();
        checkEqual(val, 13);

        // offer type
        var val = $('select#offer_type_filter').val();
        checkEqual(val, 14);
      });
    });

- content_for :page_styles do
  :plain
    #main {
      width: 1024px;
    }
    td#filters_title {
      padding-left: 15px;
    }

    table.tablesorter {
      border-collapse: separate;
    }
    
    table.tablesorter thead tr .header {
      background-position: right bottom;
    }
    
    th, 
    td {
      border: 0;
    }
    
    img.icon {
      width: 57px;
      height: 57px;
    }
    
    .last_updated {
      font-weight: bold;
      font-size: 14px;
    }
    
    ul.timeframes {
      margin: -10px 0 10px;
      padding: 0px;
    }
    ul.timeframes li {
      display: inline;
    }
    ul.timeframes li:after {
      content: " |";
    }
    ul.timeframes li:last-child:after {
      content: "";
    }
    
    #money_totals {
      margin-top: 15px;
    }
    #money_totals h3 {
      margin-top: 5px;
    }
