- timeframe = @timeframe == '7_days' ? '7 days' : @timeframe == '1_month' ? '30 days' : '24 hours'
- @page_title = "Stats for last #{timeframe}"

%h1 Stats for last #{timeframe}

%ul.timeframes
  %li= @timeframe == '24_hours' ? '24 hours' : link_to('24 hours', statz_index_path)
  %li= @timeframe == '7_days' ? '7 days' : link_to('7 days', statz_index_path(:timeframe => '7_days'))
  %li= @timeframe == '1_month' ? '30 days' : link_to('30 days', statz_index_path(:timeframe => '1_month'))

.tjform
  = label_tag('search_box', 'Offer Name:')
  = text_field_tag('search_box', '', :size => '40')

#money_totals
  .last_updated Totals Last Updated: #{@money_last_updated.to_s(:pub_ampm_sec)}
  %table#overall
    %tr
      %th
      %th Conversions
      %th Adv. Spend
      %th Payouts
    %tr
      %th Total
      %td= @money_stats[@timeframe]['conversions']
      %td= @money_stats[@timeframe]['advertiser_spend']
      %td= @money_stats[@timeframe]['publisher_earnings']
    %tr
      %th Android
      %td= @money_stats[@timeframe]['android_conversions']
      %td= @money_stats[@timeframe]['android_adv_spend']
      %td= @money_stats[@timeframe]['android_pub_earnings']
    %tr
      %th iOS
      %td= @money_stats[@timeframe]['ios_conversions']
      %td= @money_stats[@timeframe]['ios_adv_spend']
      %td= @money_stats[@timeframe]['ios_pub_earnings']
    %tr
      %th TJ Games
      %td= @money_stats[@timeframe]['tjgames_conversions']
      %td= @money_stats[@timeframe]['tjgames_adv_spend']
      %td= @money_stats[@timeframe]['tjgames_pub_earnings']
%p
  = link_to "Global Network Stats", global_statz_path
  - if permitted_to? :publisher, :statz
    |
    = link_to("Publisher Stats", publisher_statz_path)
  - if permitted_to? :advertiser, :statz
    |
    = link_to("Advertiser Stats", advertiser_statz_path)

.last_updated Last Updated: #{@last_updated.to_s(:pub_ampm_sec)}

%table#apps_table.tablesorter
  %thead
    %tr
      %th
        %a{ :id => 'toggle_icons', :href => '#' } Icon
      %th Offer
      %th{ :class => 'headerSortUp header' } Conversions
      %th Connects
      %th Store rank
      %th Price
      %th Payment
      %th Balance
      %th Platform
      %th CVR
      %th Published offers
      %th Offers revenue
      %th Featured
      %th Rewarded
      %th Offer type
    %tr
      %td.filter#filters_title{:colspan => 2}
        %b Filters
        (#{link_to('reset all', '#', :id => 'reset_filters')})
      %td.filter= select_tag('conversions_filter', options_for_select(filter_options(:conversions)))
      %td.filter= select_tag('connects_filter', options_for_select(filter_options(:connects)))
      %td.filter= select_tag('rank_filter', options_for_select(filter_options(:rank)))
      %td.filter= select_tag('price_filter', options_for_select(filter_options(:free)))
      %td.filter &nbsp;
      %td.filter= select_tag('balance_filter', options_for_select(filter_options(:balance)))
      %td.filter= select_tag('platform_filter', options_for_select(filter_options(:platform)))
      %td.filter &nbsp;
      %td.filter= select_tag('published_offers_filter', options_for_select(filter_options(:published_offers)))
      %td.filter= select_tag('revenue_filter', options_for_select(filter_options(:revenue)))
      %td.filter= select_tag('featured_filter', options_for_select(filter_options(:featured)))
      %td.filter= select_tag('rewarded_filter', options_for_select(filter_options(:rewarded)))
      %td.filter= select_tag('offer_type_filter', options_for_select(filter_options(:offer_type)))
  %tbody#apps_tbody
    - @cached_stats.each do |offer_id, stats|
      :ruby
        tr_classes = []
        tr_classes << (stats['conversions']=='0'         ? 'zero_conversions' : 'nonzero_conversions')
        tr_classes << (stats['connects']=='0'            ? 'zero_connects'    : 'nonzero_connects')
        tr_classes << (stats['overall_store_rank']=='-'  ? 'unranked'         : 'ranked')
        tr_classes << (stats['price']=='$0.00'           ? 'free'             : 'paid')
        tr_classes << stats['platform'].to_s.downcase
        tr_classes << (stats['published_offers']=='0'    ? 'zero_published'   : 'nonzero_published')
        tr_classes << (stats['offers_revenue']=='$0.00'  ? 'zero_revenue'     : 'nonzero_revenue')
        tr_classes << (stats['featured']                 ? 'featured'         : 'nonfeatured')
        tr_classes << (stats['rewarded']                 ? 'rewarded'         : 'nonrewarded')
        tr_classes << stats['offer_type'].to_s.downcase
        value = stats['balance'].gsub(/[\$,]/,'')
      %tr{ :class => tr_classes.compact.join(' '), :value => value }
        %td
          %img.icon.hidden{ :s => stats['icon_url'] }
        %td= link_to(stats['offer_name'], statz_path(offer_id))
        %td= stats['conversions']
        %td= stats['connects']
        %td= stats['overall_store_rank']
        %td= stats['price']
        %td= stats['payment']
        %td= stats['balance']
        %td= stats['platform']
        %td= stats['conversion_rate']
        %td= stats['published_offers']
        %td= stats['offers_revenue']
        %td= stats['featured']
        %td= stats['rewarded']
        %td= stats['offer_type']

- content_for :page_javascript do
  :plain
    $(function() {
      $('#search_box').autocomplete({ source: '#{search_offers_path}', delay: 250, minLength: 2, select: function(event, ui) { window.location.assign(ui.item.url); } });

      $.tablesorter.addParser({
        id: 'currency-column',
        is: function(s) { return false; },
        type: 'numeric',
        format: function(s) {
          return s.replace(/\$/g, '').replace(/,/g, '');
        }
      });
      $.tablesorter.addParser({
        id: 'rank-column',
        is: function(s) { return false; },
        type: 'numeric',
        format: function(s) {
          return s.replace(/-/g, '999999');
        }
      });
      $.tablesorter.addParser({
        id: 'formatted-number-column',
        is: function(s) { return false; },
        type: 'numeric',
        format: function(s) {
          return s.replace(/,/g, '');
        }
      });
      $("#apps_table").tablesorter({
        widgets: ['zebra'],
        headers: {
          0:  { sorter: false },
          2:  { sorter: 'formatted-number-column' },
          3:  { sorter: 'formatted-number-column' },
          4:  { sorter: 'rank-column' },
          5:  { sorter: 'currency-column' },
          6:  { sorter: 'currency-column' },
          7:  { sorter: 'currency-column' },
          10: { sorter: 'formatted-number-column' },
          11: { sorter: 'currency-column' }
        }
      });

      var iconsLoaded = false;
      var iconsVisible = false;
      $('#toggle_icons').click(function() {
        if (iconsVisible) {
          $('img.icon').hide();
          iconsVisible = false;
        } else {
          if (!iconsLoaded) {
            $('img.icon').each(function() {
              $(this).attr('src', $(this).attr('s'));
            });
            iconsLoaded = true;
          }
          $('img.icon').show();
          iconsVisible = true;
        }
        return false;
      });

      $('#reset_filters').click(function(){
        $('.filter select').each(function(i,select){
          $(select).val('');
        });
        $('tr').show();
        return false;
      });
      $('.filter select').change(function(){
        var selectValues = [
          String( $('#conversions_filter').val() ).toLowerCase(),
          String( $('#connects_filter').val() ).toLowerCase(),
          String( $('#rank_filter').val() ).toLowerCase(),
          String( $('#price_filter').val() ).toLowerCase(),
          String( $('#published_offers_filter').val() ).toLowerCase(),
          String( $('#revenue_filter').val() ).toLowerCase(),
          String( $('#featured_filter').val() ).toLowerCase(),
          String( $('#rewarded_filter').val() ).toLowerCase(),
          String( $('#platform_filter').val() ).toLowerCase(),
          String( $('#offer_type_filter').val() ).toLowerCase(),
        ]
        var className = '';
        var length = selectValues.length;
        for(var i = 0; i<length; i++) {
          if (selectValues[i]) {
            className += '.' + selectValues[i];
          }
        }
        $('tbody tr:visible').hide();
        $('tbody tr'+className).show();

        // balance levels
        var balance = $('#balance_filter').val();
        if (balance) {
          var keepNonPositive = isNaN(balance);
          balance = Number(balance);
          $('tbody tr:visible').each(function(i,tr){
            tr = $(tr);
            if (keepNonPositive) {
              if(Number(tr.attr('value')) > 0) {
                tr.hide();
              }
            } else {
              if(balance >= Number(tr.attr('value'))) {
                tr.hide();
              }
            }
          });
        }

      });
    });

- content_for :page_styles do
  :plain
    #main {
      width: 1150px;
    }
    #overall th {
      text-align: left;
      padding-right: 10px;
    }
    td#filters_title {
      padding-left: 15px;
    }

    table.tablesorter {
      border-collapse: separate;
    }

    table.tablesorter thead tr .header {
      background-position: right bottom;
    }

    th,
    td {
      border: 0;
    }

    img.icon {
      width: 57px;
      height: 57px;
    }

    .last_updated {
      font-weight: bold;
      font-size: 14px;
    }

    ul.timeframes {
      margin: -10px 0 10px;
      padding: 0px;
    }
    ul.timeframes li {
      display: inline;
    }
    ul.timeframes li:after {
      content: " |";
    }
    ul.timeframes li:last-child:after {
      content: "";
    }

    #money_totals {
      margin-top: 15px;
    }
    #money_totals h3 {
      margin-top: 5px;
    }
