- @page_title = "Stats for offer: #{@offer.name}"

.icon= image_tag(@offer.get_icon_url, :size => '56x56')
%h1= @offer.name

%p For: #{@start_time.in_time_zone('Pacific Time (US & Canada)').to_s(:pub_ampm)} - #{@end_time.in_time_zone('Pacific Time (US & Canada)').to_s(:pub_ampm)}

%p= link_to('[Edit Offer]', edit_statz_path(@offer.id))

.left
  .metadata Offer id: #{@offer.id}
  .metadata Partner id: #{@offer.partner_id}
  .metadata Offer type: #{@offer.item_type}
  - if @offer.item_type == 'App'
    .metadata Store id: #{link_to(@offer.item.store_id, @offer.item.final_store_url)}
    .metadata Use raw url: #{@offer.item.use_raw_url?}
  .metadata Price: #{number_to_currency(@offer.price / 100.0)}
  .metadata Balance: #{number_to_currency(@offer.partner.balance / 100.0)}
  .metadata Pending Earnings: #{number_to_currency(@offer.partner.pending_earnings / 100.0)}
  .metadata Daily budget: #{@offer.daily_budget}
  .metadata Show rate: #{"%.1f%" % ((@offer.show_rate || 0) * 100.0)}
  .metadata Ordinal: #{@offer.ordinal}
  .metadata Payment: #{number_to_currency(@offer.payment / 100.0)}
  .metadata Tapjoy enabled: #{@offer.tapjoy_enabled}

.right
  .metadata Countries: #{@offer.countries}
  .metadata Cities: #{@offer.cities}
  .metadata Postal codes: #{@offer.postal_codes}
  .metadata Pay-per-click: #{@offer.pay_per_click?}
  .metadata Device types: #{@offer.device_types}
  .metadata Allow negative balance: #{@offer.allow_negative_balance?}
  .metadata Self promote only: #{@offer.self_promote_only?}
  .metadata Featured: #{@offer.featured?}
  .metadata Featured payment: #{number_to_currency(@offer.featured_payment / 100.0) rescue ''}


%table
  %thead
    %tr
      %th Stat
      %th Total
      %th Hourly breakdown
  %tbody
    %tr
      %td Paid Installs
      %td= @stats['paid_installs'].sum
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['paid_installs'].join(', ')
    %tr
      %td Paid Clicks
      %td= @stats['paid_clicks'].sum
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['paid_clicks'].join(', ')
    %tr
      %td Installs Spend
      %td= number_to_currency(@stats['installs_spend'].sum / 100.0)
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['installs_spend'].map{|i| number_to_currency(i / 100.0)}.join(', ')
    %tr
      %td CVR
      %td= "%.1f%" % (@stats['paid_installs'].sum.to_f / @stats['paid_clicks'].sum * 100.0)
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['cvr'].map { |cvr| "%.0f%" % (cvr.to_f * 100.0) }.join(', ')
    %tr
      %td Connects
      %td= @stats['logins'].sum
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['logins'].join(', ')
    %tr
      %td New Users
      %td= @stats['new_users'].sum
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['new_users'].join(', ')
    %tr
      %td DAUs
      %td= @stats['daily_active_users'].sum
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['daily_active_users'].join(', ')
    %tr
      %td MAUs
      %td= @stats['monthly_active_users'].sum
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['monthly_active_users'].join(', ')
    %tr
      %td Store Rank
      %td= (@stats['overall_store_rank'].find_all{|r| r != '0'}.last || '-')
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['overall_store_rank'].join(', ')
    %tr
      %td VG Purchases
      %td= @stats['vg_purchases'].sum
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['vg_purchases'].join(', ')
    %tr
      %td Published Installs
      %td= @stats['published_installs'].sum
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['published_installs'].join(', ')
    %tr
      %td Published Clicks
      %td= @stats['installs_opened'].sum
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['installs_opened'].join(', ')
    %tr
      %td Installs Revenue
      %td= number_to_currency(@stats['installs_revenue'].sum / 100.0)
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['installs_revenue'].map{|i| number_to_currency(i / 100.0)}.join(', ')
    %tr
      %td Offers Completed
      %td= @stats['offers'].sum
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['offers'].join(', ')
    %tr
      %td Offers Clicked
      %td= @stats['offers_opened'].sum
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['offers_opened'].join(', ')
    %tr
      %td Offers Revenue
      %td= number_to_currency(@stats['offers_revenue'].sum / 100.0)
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['offers_revenue'].map{|i| number_to_currency(i / 100.0)}.join(', ')
    %tr
      %td Ratings
      %td= @stats['ratings'].sum
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['ratings'].join(', ')
    %tr
      %td Total Revenue
      %td= number_to_currency(@stats['rewards_revenue'].sum / 100.0)
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['rewards_revenue'].map{|i| number_to_currency(i / 100.0)}.join(', ')
    %tr
      %td Ad Impressions
      %td= @stats['hourly_impressions'].sum
      %td.breakdown
        %canvas{:width => '500px', :height => '100px'}= @stats['hourly_impressions'].join(', ')

- content_for :custom_head do
  = javascript_include_tag 'rgraph/RGraph.common.core'
  = javascript_include_tag 'rgraph/RGraph.common.tooltips'
  = javascript_include_tag 'rgraph/RGraph.line'
  :plain
    <!--[if IE]><script src="/javascripts/excanvas.js"></script><![endif]-->
  
- content_for :page_javascript do
  var startDate = new Date('#{@start_time.in_time_zone('Pacific Time (US & Canada)').to_s(:pub_ampm)}');
  :plain
    $(function() {
      $('td.breakdown>canvas').each(function() {
        drawGraph(this);
      })
    });
    
    function drawGraph(node) {
      var stringData = $(node).text().split(', ')
      var min = 0;
      var data = $.map(stringData, function(n) { 
        var num = Number(n.replace(/\D/, ''))
        if (num < min) {
          min = num;
        }
        return num;
      });

      if (!node.id) {
        node.id = 'id' + Math.floor(Math.random() * 9999999999)
      }

      var graph = new RGraph.Line(node.id, data);
      graph.Set('chart.shadow', true);
      graph.Set('chart.hmargin', 0);
      graph.Set('chart.tickmarks', 'circle');
      graph.Set('chart.ylabels.count', 3);
      graph.Set('chart.ymin', min);
      graph.Set('chart.tooltips', function(idx) {
        var time = new Date(startDate.getTime() + 3600000 * idx).getHours() + ':00-' + new Date(startDate.getTime() + 3600000 * (idx + 1)).getHours() + ':00'
        
        return time + "<br>" + stringData[idx];
      });
      
      graph.Draw();
    }
  
- content_for :page_styles do
  :plain
    .icon {
      float: left;
    }
    
    td.breakdown {
      font-size: small;
    }
    
    table {
      clear: both;
    }
    
    .left {
      float: left;
    }
    .right {
      float: right;
    }
