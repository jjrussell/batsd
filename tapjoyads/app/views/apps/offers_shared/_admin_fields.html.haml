%tr.admin
  %td{:colspan => 2} Admin-only fields:
= render('apps/offers_shared/countries', :f => f)
%tr.admin
  %th
    = f.label(:tapjoy_enabled)
    #help_tapjoy_enabled.help ?
  %td
    = f.check_box(:tapjoy_enabled)
    = error_message_on @offer, :tapjoy_enabled
%tr.admin
  %th
    = f.label(:allow_negative_balance)
    #help_allow_negative_balance.help ?
  %td
    = f.check_box(:allow_negative_balance)
    = error_message_on @offer, :allow_negative_balance
%tr.admin
  %th
    = f.label(:pay_per_click)
    #help_pay_per_click.help ?
  %td
    = f.check_box(:pay_per_click)
    = error_message_on @offer, :pay_per_click
- if @offer.item_type != 'ActionOffer'
  %tr.admin
    %th
      = f.label(:name, 'Offer Name')
      #help_admin_offer_name.help ?
    %td
      = f.text_field(:name)
      = error_message_on @offer, :name
    %td= link_to('Use App Name', '#', :id => 'use_app_name', :tabindex => 99)
%tr.admin
  %th
    = f.label(:name_suffix, 'Internal Suffix')
    #help_internal_suffix.help ?
  %td
    = f.text_field(:name_suffix)
    = error_message_on @offer, :name_suffix
%tr.admin
  %th
    = f.label(:show_rate)
    #help_show_rate.help ?
  %td
    = f.text_field(:show_rate)
    = error_message_on @offer, :show_rate
%tr.admin
  %th
    = f.label(:min_conversion_rate, 'Min CVR')
    #help_min_conversion_rate.help ?
  %td
    = f.text_field(:min_conversion_rate)
    = error_message_on @offer, :min_conversion_rate
%tr.admin
  %th
    = f.label(:cities)
    #help_cities.help ?
  %td
    = f.text_field(:cities)
    = error_message_on @offer, :cities
%tr.admin
  %th
    = f.label(:postal_codes)
    #help_postal_codes.help ?
  %td
    = f.text_field(:postal_codes)
    = error_message_on @offer, :postal_codes
%tr.admin
  %th
    = f.label(:device_types)
    #help_device_types.help ?
  %td
    = f.select(:device_types, options_for_select(Offer::ALL_DEVICES, @offer.get_device_types), {}, :multiple => true)
    = error_message_on @offer, :device_types
%tr.admin
  %th
    = f.label(:publisher_app_whitelist)
    #help_publisher_app_whitelist.help ?
  %td
    = f.text_field(:publisher_app_whitelist)
    = error_message_on @offer, :publisher_app_whitelist
- if [ 'App', 'EmailOffer', 'GenericOffer' ].include?(@offer.item_type)
  %tr.admin
    %th
      = f.label(:overall_budget)
      #help_overall_budget.help ?
    %td
      = f.text_field(:overall_budget)
      = error_message_on @offer, :overall_budget
%tr.admin
  %th
    = f.label(:rank_score)
    #help_rank_score.help ?
  %td
    = @offer.rank_score || "N/A"
%tr.admin
  %th
    = f.label(:min_bid_override)
    #help_min_bid_override.help ?
  %td
    = f.currency_field(:min_bid_override, {}, :class => 'allow_nil')
    = error_message_on @offer, :min_bid_override
    
- if @app.screen_layout_sizes.any?
  %tr.admin
    %th
      = f.label(:screen_layout_sizes)
      #help_screen_layout_sizes.help ?
    %td
      = f.select(:screen_layout_sizes, options_for_select(@app.screen_layout_sizes, @offer.get_screen_layout_sizes), {}, :multiple => true)
      = error_message_on @offer, :screen_layout_sizes

- existing_creatives = @offer.banner_creatives
- Offer::DISPLAY_AD_SIZES.values.each do |size|
  %tr.admin
    %th
      = f.label("#{size}_custom_creative")
    %td
      - file_chooser_options = {:id => "choose_#{size}_file"}
      - if existing_creatives.has_key? size
        - file_chooser_options[:class] = :hidden
        - format = existing_creatives[size]
        %div{:id => "existing_#{size}_image"}
          = image_tag("#{API_URL}/display_ad/image?advertiser_app_id=#{@offer.id}&size=#{size}")
          %div
            = check_box_tag("remove_#{size}_custom_creative", "1", false, :class=>"hidden")
            = link_to("Remove/Change", "#", :onclick=>"$('#remove_#{size}_custom_creative')[0].checked = true; $('#choose_#{size}_file')[0].className = ''; $('#existing_#{size}_image')[0].innerHTML = 'Existing file will be removed on update. If desired, upload new file below:'; return false;")
      %div{file_chooser_options}
        = f.file_field("#{size}_custom_creative")
        (Optional)

.hidden
  #help_admin_offer_name_content{:name => 'Offer Name'} Name that will be displayed on offer walls.
  #help_tapjoy_enabled_content{ :name => 'Tapjoy Enabled' } Whether or not the offer is enabled for installs.
  #help_allow_negative_balance_content{ :name => 'Allow Negative Balance' } Allow this partner's balance to go below zero. This effectively locks show rate to 1.0.
  #help_pay_per_click_content{ :name => 'Pay-Per-Click' } Charge the advertiser and award the user immediately on click.
  #help_featured_content{ :name => 'Featured' } Enables this offer in our featured offers feed.
  #help_internal_suffix_content{ :name => 'Internal Suffix' } Internal identifier for offers. i.e. 'featured' or 'us only'
  #help_show_rate_content{ :name => 'Show Rate' } The probability that this offer will be shown on an offerwall impression. This is set automatically by the system and is used for budgeting. Allowed values are 0.0 - 1.0.
  #help_min_conversion_rate_content{ :name => 'Min CVR' } This is used to prevent low conversion rate warnings. A warning will only be issued if the conversion rate falls below this threshold. Allowed values are blank or 0.0 - 1.0
  #help_cities_content{ :name => 'Cities' } Targets this offer to these cities. Must be an array of city names or blank for no targeting. i.e. ["San Francisco"]
  #help_postal_codes_content{ :name => 'Postal Codes' } Targets this offer to these postal codes. Must be an array of postal codes or blank for no targeting. i.e. ["94105"]
  #help_device_types_content{ :name => 'Device Types' } Targets this offer to these device types. At least one device type must be selected.
  #help_publisher_app_whitelist_content{ :name => 'Publisher App Whitelist' } Restrict this offer to these publisher apps. Must be a ";" separated list of publisher app IDs.
  #help_daily_budget_content{ :name => 'Daily Budget' } The maximum number of conversions to complete in one day.
  #help_overall_budget_content{ :name => 'Overall Budget' } The maximum number of conversions to complete in the lifetime of this offer. This is merely a hard limit so it is likely that the offer will go over-budget.
  #help_rank_score_content{ :name => 'Rank Score' } The last computed rank score for this offer.
  #help_min_bid_override_content{ :name => 'Min Bid Override' } Manually set the minimum allowed bid for this offer.
  #help_countries_blacklist_content{ :name => 'Country Blacklist' } This field is auto-filled from iTunes, and updated daily. To manually target countries, use the country targeting field, but note that this offer will not be shown in countries listed in this blacklist, irrespective of country targeting.

- content_for :page_javascript do
  :plain
    $(function($) {
      $('#use_app_name').click(function() {
        $('input#offer_name').val(#{@offer.item.name.to_json});
        return false;
      });
    });
