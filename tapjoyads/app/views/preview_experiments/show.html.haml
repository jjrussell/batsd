%h1= "Offer Ranks for " + (params[:id] == "featured" ? "Featured Offers" : "Experiment #{params[:id]}")

- if params[:id] == "featured" && !@offers.empty?
  - weight_scale = 1 - @offers.last.rank_score
  - weights = @offers.collect { |offer| offer.rank_score + weight_scale }
  - total_weight = weights.sum

- experiment_options = "<option value=\"featured\">Featured</option>" + options_for_select(@experiments.collect { |k, v| [ k.to_s.titleize + " (#{v})", v.to_s ] }, params[:id])
%table
  - form_tag('', :id => 'experiments-form') do
    %tr
      %td= label_tag 'experiments-list', 'Offers:'
      %td= select_tag 'experiments-list', experiment_options
      
  - form_tag('', :id => 'devices-form') do
    %tr
      %td= label_tag 'devices-list', 'Device:'
      %td= select_tag 'devices-list', options_for_select(["all"] + Offer::ALL_DEVICES, params[:device])

%br
Display: 
= label_tag "App", "Apps"
= check_box_tag "App", "", true

= label_tag "RatingOffer", "RatingOffers"
= check_box_tag "RatingOffer", "", false

= label_tag "GenericOffer", "GenericOffers"
= check_box_tag "GenericOffer", "", true

%table#offers.tablesorter
  %thead
    %tr
      - if params[:id] == "featured"
        %th Display %
      - else
        %th Avg Rank
      %th Rank Score
      %th Name
      %th Show Rate
      %th CVR
      %th Price
      %th Avg Revenue
      %th Bid
      %th Boost
      %th Devices
      %th Type
  %tbody#offers_tbody
    - rank = 1
    - @offers.each_with_index do |offer, i|
      %tr{ "data-item_type" => offer.item_type }
        - if params[:id] == "featured"
          %td= "#{(100.0 * weights[i] / total_weight).round(2)}%"
        - else
          %td= rank.floor.to_i.to_s
        %td= offer.rank_score
        %td= (permitted_to? :show, :statz) ? link_to(offer.name, statz_path(offer)) : offer.name
        %td= offer.show_rate
        %td= offer.conversion_rate
        %td= number_to_currency(0.01 * offer.price)
        %td= offer.avg_revenue
        %td= offer.bid
        %td= offer.rank_boost
        %td= offer.get_device_types.to_a.join(",")
        %td= offer.item_type
      - rank += offer.show_rate unless offer.item_type == 'RatingOffer'
        
- content_for :page_javascript do
  :plain
    function resetTable() {
      $('#offers').tablesorter({
        widgets: ['zebra'],
        headers: {
          6: { sorter: 'float-column' }
        },
      });
    }
    
    function toggleOffers(item_type) {
      $('#offers_tbody tr[data-item_type="' + item_type + '"]').toggle()
    }
    
    function updateLocation() {
      window.location = '#{preview_experiments_url}' + '/' + $('#experiments-list').val() + "?device=" + $('#devices-list').val();
    }    
  
    $(function() {

      $.tablesorter.addParser({
        id: 'float-column',
        is: function(s) { return false; },
        type: 'numeric',
        format: function(s) {
          return s;
        }
      });
      
      $('#RatingOffer').click(function() {
        toggleOffers('RatingOffer')
      })
      
      $('#GenericOffer').click(function() {
        toggleOffers('GenericOffer')
      })
      
      $('#App').click(function() {
        toggleOffers('App')
      })
      
      resetTable();
      
      $('#offers_tbody tr[data-item_type="RatingOffer"]').hide();
      
      $('#experiments-list').change(function() {
        updateLocation();
      });
      
      $('#devices-list').change(function() {
        updateLocation();
      });
    });