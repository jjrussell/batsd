- @page_title = "Reporting for #{@offer.name}"

= render :partial => 'apps/carousel', :locals => {:objects => current_partner_offers, :object => @offer}

#display_date
  For: #{@start_time.to_s(:mdy)} - #{@end_time.to_s(:mdy)}. 
  Granularity: #{@granularity.to_s}.
  %a{ :href => '#' } [Change]

%form#change_date{ :method => 'get' }
  = text_field_tag(:date, @start_time.to_date.to_s(:mdy))
  \-
  = text_field_tag(:end_date, @end_time.to_date.to_s(:mdy))
  = select_tag(:granularity, options_for_select({ 'Daily' => :daily, 'Hourly' => :hourly }, @granularity))
  = submit_tag('Change')

#tables
  .data
    %table
      %thead
        %tr
          %th{ :colspan => 2 } Advertiser Data
      %tbody
        %tr
          %td Clicks
          %td= number_with_delimiter(@appstats.stats['paid_clicks'].sum)
        %tr
          %td Installs
          %td= number_with_delimiter(@appstats.stats['paid_installs'].sum)
        %tr
          %td Conversion Rate
          %td
            - if @appstats.stats['paid_clicks'].sum > 0
              = "%.1f%" % (@appstats.stats['paid_installs'].sum.to_f / @appstats.stats['paid_clicks'].sum * 100.0)
            - else
              \-
        %tr
          %td Spend
          %td= number_to_currency(@appstats.stats['installs_spend'].sum / -100.0)
        %tr
          %td Daily Budget
          %td= number_with_delimiter(@offer.daily_budget)
        %tr
          %td Balance
          %td= number_to_currency(current_partner.balance / 100.0)
        %tr
          %td Cost per Install
          %td= number_to_currency(@offer.payment / 100.0)

  .data
    %table
      %thead
        %tr
          %th{ :colspan => 2 } Publisher Data
      %tbody
        %tr
          %td Offerwall Views
          %td= number_with_delimiter(@appstats.stats['offerwall_views'].sum)
        %tr
          %td Offer Clicks
          %td= number_with_delimiter(@appstats.stats['rewards_opened'].sum)
        %tr
          %td Offers Completed
          %td= number_with_delimiter(@appstats.stats['rewards'].sum)
        %tr
          %td Conversion Rate
          %td
            - if @appstats.stats['rewards_opened'].sum > 0
              = "%.1f%" % (@appstats.stats['rewards'].sum.to_f / @appstats.stats['rewards_opened'].sum * 100.0)
            - else
              \-
        %tr
          %td Revenue
          %td= number_to_currency(@appstats.stats['rewards_revenue'].sum / 100.0)
        %tr
          %td Offerwall eCPM
          %td
            - if @appstats.stats['offerwall_views'].sum > 0
              = number_to_currency(@appstats.stats['rewards_revenue'].sum.to_f / (@appstats.stats['offerwall_views'].sum / 1000.0) / 100.0)
            - else
              $0.00

  .data
    - form_tag(export_reporting_path(@offer.id)) do
      = hidden_field_tag(:date, params[:date])
      = hidden_field_tag(:end_date, params[:end_date])
      = hidden_field_tag(:granularity, params[:granularity])
      = submit_tag('Download as CSV')

  .clear

#charts
  #connects.graph
    %h3
    .holder
      %canvas#connects_graph{ :width => '550px', :height => '330px' }
      .bar
      .tooltip

  #installs_spend.graph
    %h3
    .holder
      %canvas#installs_spend_graph{ :width => '550px', :height => '330px' }
      .bar
      .tooltip

  #installs_rank.graph
    %h3
    .holder
      %canvas#installs_rank_graph{ :width => '550px', :height => '330px' }
      .bar
      .tooltip

  #published_offers.graph
    %h3
    .holder
      %canvas#published_offers_graph{ :width => '550px', :height => '330px' }
      .bar
      .tooltip

  #offerwall_views.graph
    %h3
    .holder
      %canvas#offerwall_views_graph{ :width => '550px', :height => '330px' }
      .bar
      .tooltip

.clear

- include_tapjoy_graph

- content_for :page_javascript do
  :plain
    $(function() {
      $('#display_date a').click(function() {
        $('#display_date').hide();
        $('#change_date').show();
        return false;
      });
      
      $('#date').datepicker();
      $('#end_date').datepicker();
      
      Tapjoy.drawLargeGraph(#{@connect_data.to_json}, 'connects');
      Tapjoy.drawLargeGraph(#{@rewarded_installs_plus_spend_data.to_json}, 'installs_spend');
      Tapjoy.drawLargeGraph(#{@rewarded_installs_plus_rank_data.to_json}, 'installs_rank');
      Tapjoy.drawLargeGraph(#{@published_offers_data.to_json}, 'published_offers');
      Tapjoy.drawLargeGraph(#{@offerwall_views_data.to_json}, 'offerwall_views');
    });
  
- content_for :page_styles do
  :plain
    .clear {
      clear: both;
    }
    
    #change_date {
      display: none;
    }
    
    #tables {
      padding: 10px 0;
    }
    
    .data {
      float: left;
      padding: 0 10px;
    }
    
    table {
      border-collapse: collapse;
    }
    
    th, td {
      border: 1px solid #ccc;
      padding: 2px 5px;
    }
    
    th {
      text-align: center;
    }
    
    td {
      text-align: left;
    }
