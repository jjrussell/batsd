- @page_title = "Reporting for #{@offer.name}"

= render :partial => 'shared/dropdown_select', :locals => {:objects => current_partner_offers, :selected => @offer, :options => {:extra_url_params => params, :title_prefix => 'Reporting for'} }
%br/

.left
  - form_tag(export_reporting_path(@offer.id), :id => 'download') do
    = text_field_tag(:date, @start_time.to_date.to_s(:mdy))
    \-
    = text_field_tag(:end_date, @end_time.to_date.to_s(:mdy))
    = select_tag(:granularity, options_for_select({ 'Daily' => :daily, 'Hourly' => :hourly }, @granularity))
    = submit_tag('Download as CSV')
.clear

#tables
  = render :partial => 'stats_table'
.clear

#charts{ :style => "text-align: center;" }
  #connects.graph
    %h3
    .holder
      %canvas#connects_graph{ :width => '800px', :height => '440px' }
      .bar
      .tooltip

  #installs_spend.graph
    %h3
    .holder
      %canvas#installs_spend_graph{ :width => '800px', :height => '440px' }
      .bar
      .tooltip

  #installs_rank.graph
    %h3
    .holder
      %canvas#installs_rank_graph{ :width => '800px', :height => '440px' }
      .bar
      .tooltip

  #published_offers.graph
    %h3
    .holder
      %canvas#published_offers_graph{ :width => '800px', :height => '440px' }
      .bar
      .tooltip

  #offerwall_views.graph
    %h3
    .holder
      %canvas#offerwall_views_graph{ :width => '800px', :height => '440px' }
      .bar
      .tooltip

.clear

- include_tapjoy_graph

- content_for :page_javascript do
  :plain
    var loadData = function(data) {
      $('div#charts canvas').each(function(){
        RGraph.Clear(this);
      });

      Tapjoy.drawLargeGraph(data.connect_data, 'connects');
      Tapjoy.drawLargeGraph(data.rewarded_installs_plus_spend_data, 'installs_spend');
      Tapjoy.drawLargeGraph(data.rewarded_installs_plus_rank_data, 'installs_rank');
      Tapjoy.drawLargeGraph(data.published_offers_data, 'published_offers');
      Tapjoy.drawLargeGraph(data.offerwall_views_data, 'offerwall_views');

      $('#date').val(data.date);
      $('#end_date').val(data.end_date);
      $('#granularity').val(data.granularity);
    };

    $(function($) {
      $('#date').datepicker();
      $('#end_date').datepicker();
      loadData(#{@data.to_json});
      var ajaxCall = function(){
        $('#date, #end_date, #granularity').attr('disabled', true);
        $('#tables, #charts').css('opacity', 0.3);
        var url = '#{request.env['PATH_INFO']}';
        var params = {
          date: $('#date').val(),
          end_date: $('#end_date').val(),
          granularity: $('#granularity').val()
        };
        $.get(url, params, function(response, status, request){
          loadData(response.data);
          $('#tables').html(response.stats_table);
          $('#date, #end_date, #granularity').attr('disabled', false);
          $('#tables, #charts').css('opacity', 1.0);
          location.href = location.href.split(/#/)[0] +
            '#date=' + $('#date').val() +
            '&end_date=' + $('#end_date').val() +
            '&granularity=' + $('#granularity').val();
        }, 'json');
      };
      $('#date, #end_date, #granularity').change(ajaxCall);
      // load appropriate data from anchor
      var anchor = location.href.split(/#/)[1];
      if (anchor) {
        $(anchor.split(/&/)).each(function(i, pair){
          pair = pair.split(/=/);
          $('#'+pair[0]).val(pair[1]);
          ajaxCall();
        });
      }
    });

- content_for :page_styles do
  :plain
    .icon {
      padding-bottom: 20px;
      padding-right: 10px;
      float: left;
    }
    #tables {
      padding: 20px 0;
    }
    .data {
      float: left;
      padding: 0 10px;
    }
    table {
      border-collapse: collapse;
    }
    th, td {
      border: 1px solid #ccc;
      padding: 2px 5px;
    }
    th {
      text-align: center;
    }
    td {
      text-align: left;
    }
    .tjform input[type=submit] {
      margin: 0;
      float: none;
    }
