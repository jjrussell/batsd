- @page_title = "Reporting for #{@offer.name}"

= render :partial => 'shared/dropdown_select', :locals => {:objects => current_partner_offers, :selected => @offer, :options => {:extra_url_params => params, :title_prefix => 'Reporting for'} }
%br/

.left
  - form_tag(export_reporting_path(@offer.id), :id => 'download') do
    = text_field_tag(:date, @start_time.to_date.to_s(:mdy))
    \-
    = text_field_tag(:end_date, @end_time.to_date.to_s(:mdy))
    = select_tag(:granularity, options_for_select({ 'Daily' => :daily, 'Hourly' => :hourly }, @granularity))
    = submit_tag('Download as CSV')
.clear

#tables
  .data
    %table
      %thead
        %tr
          %th{ :colspan => 2 } Advertiser Data
      %tbody
        %tr
          %td Clicks
          %td= number_with_delimiter(@appstats.stats['paid_clicks'].sum)
        %tr
          %td Installs
          %td= number_with_delimiter(@appstats.stats['paid_installs'].sum)
        %tr
          %td Conversion Rate
          %td
            - if @appstats.stats['paid_clicks'].sum > 0
              = "%.1f%" % (@appstats.stats['paid_installs'].sum.to_f / @appstats.stats['paid_clicks'].sum * 100.0)
            - else
              \-
        %tr
          %td Spend
          %td= number_to_currency(@appstats.stats['installs_spend'].sum / -100.0)
        %tr
          %td Daily Budget
          %td= number_with_delimiter(@offer.daily_budget)
        %tr
          %td Balance
          %td= number_to_currency(current_partner.balance / 100.0)
        %tr
          %td Cost per Install
          %td= number_to_currency(@offer.payment / 100.0)

  .data
    %table
      %thead
        %tr
          %th{ :colspan => 2 } Publisher Data
      %tbody
        %tr
          %td Offerwall Views
          %td= number_with_delimiter(@appstats.stats['offerwall_views'].sum)
        %tr
          %td Offer Clicks
          %td= number_with_delimiter(@appstats.stats['rewards_opened'].sum)
        %tr
          %td Offers Completed
          %td= number_with_delimiter(@appstats.stats['rewards'].sum)
        %tr
          %td Conversion Rate
          %td
            - if @appstats.stats['rewards_opened'].sum > 0
              = "%.1f%" % (@appstats.stats['rewards'].sum.to_f / @appstats.stats['rewards_opened'].sum * 100.0)
            - else
              \-
        %tr
          %td Revenue
          %td= number_to_currency(@appstats.stats['rewards_revenue'].sum / 100.0)
        %tr
          %td Offerwall eCPM
          %td
            - if @appstats.stats['offerwall_views'].sum > 0
              = number_to_currency(@appstats.stats['rewards_revenue'].sum.to_f / (@appstats.stats['offerwall_views'].sum / 1000.0) / 100.0)
            - else
              $0.00

  .clear

#charts{ :style => "text-align: center;" }
  #connects.graph
    %h3
    .holder
      %canvas#connects_graph{ :width => '800px', :height => '440px' }
      .bar
      .tooltip

  #installs_spend.graph
    %h3
    .holder
      %canvas#installs_spend_graph{ :width => '800px', :height => '440px' }
      .bar
      .tooltip

  #installs_rank.graph
    %h3
    .holder
      %canvas#installs_rank_graph{ :width => '800px', :height => '440px' }
      .bar
      .tooltip

  #published_offers.graph
    %h3
    .holder
      %canvas#published_offers_graph{ :width => '800px', :height => '440px' }
      .bar
      .tooltip

  #offerwall_views.graph
    %h3
    .holder
      %canvas#offerwall_views_graph{ :width => '800px', :height => '440px' }
      .bar
      .tooltip

.clear

- include_tapjoy_graph

- content_for :page_javascript do
  :plain
    var loadData = function(data) {
      $('div#charts div.graph div.holder canvas').each(function(){
        RGraph.Clear(this);
      });

      Tapjoy.drawLargeGraph(data.connect_data, 'connects');
      Tapjoy.drawLargeGraph(data.rewarded_installs_plus_spend_data, 'installs_spend');
      Tapjoy.drawLargeGraph(data.rewarded_installs_plus_rank_data, 'installs_rank');
      Tapjoy.drawLargeGraph(data.published_offers_data, 'published_offers');
      Tapjoy.drawLargeGraph(data.offerwall_views_data, 'offerwall_views');

      $('#date').val(data.date);
      $('#end_date').val(data.end_date);
      $('#granularity').val(data.granularity);
    };

    $(function($) {
      $('#date').datepicker();
      $('#end_date').datepicker();
      loadData(#{@data.to_json});
      $('#date, #end_date, #granularity').change(function(){
        // TODO: disable input boxes while ajax is loading
        var url = '#{request.env['PATH_INFO']}';
        var params = {
          date: $('#date').val(),
          end_date: $('#end_date').val(),
          granularity: $('#granularity').val(),
          format: 'json'
        };
        $.get(url, params, function(data, status, request){
          loadData(data);
        }, 'json');
      });

      $('#download_as_csv').click(function(){
        $('input#download_date').val($('#date').val());
        $('input#download_end_date').val($('#end_date').val());
        $('input#download_granularity').val($('#granularity').val());
        $('form#download').submit();
      });
    });
  
- content_for :page_styles do
  :plain
    .icon {
      padding-bottom: 20px;
      padding-right: 10px;
      float: left;
    }
    
    #tables {
      padding: 20px 0;
    }
    
    .data {
      float: left;
      padding: 0 10px;
    }
    
    table {
      border-collapse: collapse;
    }
    
    th, td {
      border: 1px solid #ccc;
      padding: 2px 5px;
    }
    
    th {
      text-align: center;
    }
    
    td {
      text-align: left;
    }
    
    .tjform input[type=submit] {
      margin: 0;
      float: none;
    }
