- @page_title = "Reporting for #{@offer.name}"

%ul
  - current_partner_offers.each do |offer|
    - unless @offer.id == offer.id
      %li= link_to(offer.name, reporting_path(offer.id, { :date => @start_time.to_date.to_s(:mdy), :end_date => @end_time.to_date.to_s(:mdy), :granularity => @granularity }))

#display_date
  For: #{@start_time.to_s(:mdy)} - #{@end_time.to_s(:mdy)}. 
  Granularity: #{@granularity.to_s}.
  %a{ :href => '#' } [Change]

%form#change_date{ :method => 'get' }
  = text_field_tag(:date, @start_time.to_date.to_s(:mdy))
  \-
  = text_field_tag(:end_date, @end_time.to_date.to_s(:mdy))
  = select_tag(:granularity, options_for_select({ 'Daily' => :daily, 'Hourly' => :hourly }, @granularity))
  = submit_tag('Change')

#charts
  #connects.graph
    %h3
    .holder
      %canvas#connects_graph{:width => '550px', :height => '330px'}
      .bar
      .tooltip

  #installs_spend.graph
    %h3
    .holder
      %canvas#installs_spend_graph{:width => '550px', :height => '330px'}
      .bar
      .tooltip

  #installs_rank.graph
    %h3
    .holder
      %canvas#installs_rank_graph{:width => '550px', :height => '330px'}
      .bar
      .tooltip

  #published_installs.graph
    %h3
    .holder
      %canvas#published_installs_graph{:width => '550px', :height => '330px'}
      .bar
      .tooltip

  #offerwall_views.graph
    %h3
    .holder
      %canvas#offerwall_views_graph{:width => '550px', :height => '330px'}
      .bar
      .tooltip

  #published_offers.graph
    %h3
    .holder
      %canvas#published_offers_graph{:width => '550px', :height => '330px'}
      .bar
      .tooltip

.clear

#tables
  .data
    %table
      %thead
        %tr
          %th{ :colspan => 2 } Advertiser Data
      %tbody
        %tr
          %td Clicks
          %td= @stats['paid_clicks'].sum
        %tr
          %td Installs
          %td= @stats['paid_installs'].sum
        %tr
          %td Conversion Rate
          %td= "%.1f%" % (@stats['paid_installs'].sum.to_f / @stats['paid_clicks'].sum * 100.0)
        %tr
          %td Spend
          %td= number_to_currency(@stats['installs_spend'].sum / 100.0)
        %tr
          %td Daily Budget
          %td= @offer.daily_budget
        %tr
          %td Balance
          %td= number_to_currency(current_partner.balance / 100.0)
        %tr
          %td Cost per Install
          %td= number_to_currency(@offer.payment / 100.0)

  .data
    %table
      %thead
        %tr
          %th{ :colspan => 2 } Publisher Data
      %tbody
        %tr
          %td Offerwall Views
          %td= @stats['offerwall_views'].sum
        %tr
          %td Offer Clicks
          %td= @stats['installs_opened'].sum + @stats['offers_opened'].sum
        %tr
          %td Offers Completed
          %td= @stats['published_installs'].sum + @stats['offers'].sum
        %tr
          %td Conversion Rate
          %td= "%.1f%" % ((@stats['published_installs'].sum + @stats['offers'].sum).to_f / (@stats['installs_opened'].sum + @stats['offers_opened'].sum) * 100.0)
        %tr
          %td Revenue
          %td= number_to_currency((@stats['installs_revenue'].sum + @stats['offers_revenue'].sum) / 100.0)

  .data
    = link_to('Download as CSV', export_reporting_path(@offer.id, { :date => @start_time.to_date.to_s(:mdy), :end_date => @end_time.to_date.to_s(:mdy), :granularity => @granularity }))

  .clear

- include_tapjoy_graph

- content_for :page_javascript do
  :plain
    var connectData = {
      "name": "Connects",
      "intervals": [ "#{@intervals.join('","')}" ],
      "xLabels": [ "#{@x_labels.join('","')}" ],
      
      "main": {
        "data":[
           [ #{@stats['logins'].join(',')} ],
           [ #{@stats['new_users'].join(',')} ],
           [ #{@stats['daily_active_users'].join(',')} ],
           [ #{@stats['monthly_active_users'].join(',')} ],
        ],
        "names": ["Connects", "New users", "DAUs", "MAUs"],
        "totals": [ #{@stats['logins'].sum}, #{@stats['new_users'].sum}, #{@stats['daily_active_users'].sum}, #{@stats['monthly_active_users'].sum} ]
      }
    };
    
    var installData = {
      "name": "Rewarded installs + spend",
      "intervals": [ "#{@intervals.join('","')}" ],
      "xLabels": [ "#{@x_labels.join('","')}" ],
      
      "main": {
        "data":[
           [ #{@stats['paid_installs'].join(',')} ],
           [ #{@stats['paid_clicks'].join(',')} ]
        ],
        "names": ["Paid installs", "Paid clicks"],
        "totals": [ #{@stats['paid_installs'].sum}, #{@stats['paid_clicks'].sum} ]
      },
      
      "right": {
        "data": [
          [ #{@stats['installs_spend'].map{|i| i / -100.0}.join(',')} ]
        ],
        "stringData": [
          [ "#{@stats['installs_spend'].map{|i| number_to_currency(i / -100.0)}.join('","')}" ]
        ],
        "names": [ "Spend" ],
        "unitPrefix": "$",
        "totals": [ "#{number_to_currency(@stats['installs_spend'].sum / 100.0)}" ]
      },
      
      "extra": {
        "data": [
          [ "#{@stats['cvr'].map { |cvr| "%.0f%" % (cvr.to_f * 100.0) }.join('","')}" ]
        ],
        "names": [ "Conversion rate" ],
        "totals": [ "#{"%.1f%" % (@stats['paid_installs'].sum.to_f / @stats['paid_clicks'].sum * 100.0)}" ]
      }
    };
    
    var rankData = {
      "name": "Rewarded installs + rank",
      "intervals": [ "#{@intervals.join('","')}" ],
      "xLabels": [ "#{@x_labels.join('","')}" ],
      
      "main": {
        "data":[
           [ #{@stats['paid_installs'].join(',')} ],
           [ #{@stats['paid_clicks'].join(',')} ]
        ],
        "names": ["Paid installs", "Paid clicks"],
        "totals": [ #{@stats['paid_installs'].sum}, #{@stats['paid_clicks'].sum} ]
      },
      
      "right": {
        "data": [
          [ #{ @stats['overall_store_rank'].map{|r| r == '-' || r == '0'  ? 'null' : r}.join(',') } ]
        ],
        "names": [ "Rank" ],
        "totals": [ "#{ (@stats['overall_store_rank'].select{|r| r != '0'}.last || '-') }" ],
        "yMax": 100
      }
    };
    
    var publishedInstallsData = {
      "name": "Published installs",
      "intervals": [ "#{@intervals.join('","')}" ],
      "xLabels": [ "#{@x_labels.join('","')}" ],
      
      "main": {
        "data":[
           [ #{@stats['published_installs'].join(',')} ],
           [ #{@stats['installs_opened'].join(',')} ]
        ],
        "names": ["Published installs", "Published clicks"],
        "totals": [ #{@stats['published_installs'].sum}, #{@stats['installs_opened'].sum} ]
      },
      
      "right": {
        "data": [
          [ #{@stats['installs_revenue'].map{|i| i / 100.0}.join(',')} ]
        ],
        "stringData": [
          [ "#{@stats['installs_revenue'].map{|i| number_to_currency(i / 100.0)}.join('","')}" ]
        ],
        "names": [ "Installs revenue" ],
        "unitPrefix": "$",
        "totals": [ "#{ number_to_currency(@stats['installs_revenue'].sum / 100.0) }" ]
      },
    };
    
    var offerwallData = {
      "name": "Offerwall views",
      "intervals": [ "#{@intervals.join('","')}" ],
      "xLabels": [ "#{@x_labels.join('","')}" ],
      
      "main": {
        "data":[
           [ #{@stats['published_installs'].join(',')} ],
           [ #{@stats['installs_opened'].join(',')} ],
           [ #{@stats['offerwall_views'].join(',')} ]
        ],
        "names": ["Published installs", "Published clicks", "Offerwall views"],
        "totals": [ #{@stats['published_installs'].sum}, #{@stats['installs_opened'].sum}, #{@stats['offerwall_views'].sum} ]
      }
    };
    
    var publishedOffersData = {
      "name": "Published offers",
      "intervals": [ "#{@intervals.join('","')}" ],
      "xLabels": [ "#{@x_labels.join('","')}" ],
      
      "main": {
        "data":[
           [ #{@stats['offers'].join(',')} ],
           [ #{@stats['offers_opened'].join(',')} ]
        ],
        "names": ["Offers completed", "Offers clicked"],
        "totals": [ #{@stats['offers'].sum}, #{@stats['offers_opened'].sum} ]
      },
      
      "right": {
        "data": [
          [ #{@stats['offers_revenue'].map{|i| i / 100.0}.join(',')} ]
        ],
        "stringData": [
          [ "#{@stats['offers_revenue'].map{|i| number_to_currency(i / 100.0)}.join('","')}" ]
        ],
        "names": [ "Offers revenue" ],
        "unitPrefix": "$",
        "totals": [ "#{ number_to_currency(@stats['offers_revenue'].sum / 100.0) }" ]
      },
    };
    
    $(function() {
      $('#display_date a').click(function() {
        $('#display_date').hide();
        $('#change_date').show();
        return false;
      });
      
      $('#date').datepicker();
      $('#end_date').datepicker();
      
      Tapjoy.drawLargeGraph(connectData, 'connects');
      Tapjoy.drawLargeGraph(installData, 'installs_spend');
      Tapjoy.drawLargeGraph(rankData, 'installs_rank');
      Tapjoy.drawLargeGraph(publishedInstallsData, 'published_installs');
      Tapjoy.drawLargeGraph(offerwallData, 'offerwall_views');
      Tapjoy.drawLargeGraph(publishedOffersData, 'published_offers');
    });
  
- content_for :page_styles do
  :plain
    .clear {
      clear: both;
    }
    
    #change_date {
      display: none;
    }
    
    #charts {
      padding: 10px 0;
    }
    
    .data {
      float: left;
      padding: 0 10px;
    }
    
    table {
      border-collapse: collapse;
    }
    
    th, td {
      border: 1px solid #ccc;
      padding: 2px 5px;
    }
    
    th {
      text-align: center;
    }
    
    td {
      text-align: left;
    }
