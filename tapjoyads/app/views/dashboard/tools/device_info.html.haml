- @page_title = 'Device Info'

%h1 Device info &amp; Unresolved clicks
= form_tag({}, { :method => :get, :class => 'tjform' }) do
  %table
    %tbody
      %tr
        %th UDID:
        %td= text_field_tag 'udid', params[:udid], :size => '55'
      %tr
        %th Click key:
        %td= text_field_tag 'click_key', params[:click_key], :size => '55'
      %tr
        %th Email:
        %td= text_field_tag 'email_address', params[:email_address], :size => '55'
      %tr
        %th MAC Address:
        %td= text_field_tag 'mac_address', params[:mac_address], :size => '55'
      %tr
        %td{ :colspan => 2 }= submit_tag 'Find'

- if @all_udids.present?
  %h3 Please choose the udid for this email
  %table
    %tbody
      - @all_udids.each do |udid|
        %tr
          %td
            = link_to udid, device_info_tools_path(:udid => udid, :email_address => params[:email_address])

- if @device.present?
  %h3 Device
  - if permitted_to? :recreate_device_identifiers, :dashboard_tools
    = form_tag({ :action => 'recreate_device_identifiers', :udid => params[:udid] }, { :class => 'tjform' }) do
      = submit_tag 'Recreate Identifiers'
  %br

  = form_tag({ :action => 'update_device', :udid => params[:udid] }, { :class => 'tjform' }) do
    %table
      %tbody
        %tr
          %th Device ID
          %td= params[:udid]
        %tr
          %th MAC address
          %td
            - if @device.mac_address?
              = @device.mac_address
            - else
              %i unknown
        %tr
          %th Platform
          %td= @device.platform
        %tr
          %th Product
          %td= @device.product
        %tr
          %th Jailbroken?
          %td{:class => @device.is_jailbroken? ? "jailbroken" : ""}= @device.is_jailbroken?
        %tr
          %th TJM Gamers
          - if @device.gamers.any?
            %td
              = raw(@device.gamers.collect { |g| link_to(g.email, tools_gamer_path(g)) }.join(', '))
          - else
            %td= 'Not connected to any Tapjoy Marketplace Gamer'
        - if @device.country.present?
          %tr
            %th Country
            %td= @device.country
        - if @device.survey_answers.present?
          %tr
            %th Survey Answers
            %td
              - @device.survey_answers.each do |k,v|
                %b= k.humanize
                \:
                = v
                %br/
        %tr
          %th
            Opted Out?
          %td
            = check_box_tag 'opted_out', '1', @device.opted_out?
        %tr
          %th
            Opt Out Selective Offer Types
            #help_opt_out_offer_types.help ?
          %td
            = select_tag :opt_out_offer_types, options_for_select(Offer::ALL_OFFER_TYPES, @device.opt_out_offer_types), {:multiple => true, :class => 'chosen'}
        %tr
          %th
            Banned?
          %td
            = check_box_tag 'banned', '1', @device.banned?
        - if @device.suspended?
          %tr
            %th
              Suspension Ends
            %td
              = @device.suspension_expires_at.to_s(:pub_ampm_sec)
          - if permitted_to?(:force_conversion, :dashboard_tools)
            %tr
              %th
                Unsuspend?
              %td
                = check_box_tag 'unsuspend', '1'
        %tr
          %th
            Total Support Requests Filed
          %td
            = @support_requests_created
        %tr
          %th
            Internal Notes
          %td
            = text_area_tag 'internal_notes', @device.internal_notes, :size => '50x4'
        %tr
          %td{ :colspan => 2 }
            = submit_tag 'Update'

  %h3 Installed Apps (#{@apps.length})
  %table.with-border
    %thead
      %tr
        %td App Name
        %td Last run time
        %td Pub User ID
        - if permitted_to? :award_currencies, :dashboard_tools
          %td Award Currency
    %tbody.show-five
      - @apps.each_with_index do |pair, i|
        - last_run_time, app = pair
        - pub_id = @device.publisher_user_ids[app.id]
        %tr.last_run_app
          %td
            %strong
              = link_to_statz(app.name, app)
          %td= last_run_time.to_s(:pub_ampm_sec)
          %td
            - if pub_id != @device.key
              = pub_id
          - if permitted_to? :award_currencies, :dashboard_tools
            %td
              - if app.is_publisher_offer?
                - app.item.currencies .each do |currency|
                  = form_tag award_currencies_tools_path(:publisher_app_id => app.item, :currency_id => currency.id, :udid => params[:udid]) do
                    = submit_tag currency.name
  - if @apps.length > 5
    = link_to('(show all)', '#', { :id => 'show_more_apps' })

  %h3
    Clicks (#{@clicks.length})
    +
    %span.rewarded Rewards (#{@rewarded_clicks_count})
    +
    %span.rewarded-failed Rewards Failed (#{@rewarded_failed_clicks_count})
    +
    %span.jailbroken Jailbroken (#{@jailbroken_count})
    +
    %span.not-rewarded Won't reward (#{@not_rewarded_count})
    +
    %span.blocked Blocked (#{@blocked_count})
    +
    %span.forced Forced (#{@force_converted_count})
  - now = Time.zone.now
  - if params[:use_recent_clicks].present?
    - text = "Show Recent Clicks: #{(now - Device::RECENT_CLICKS_RANGE).to_s(:pub)} - #{now.to_s(:pub)}"
    = button_to text, '#', :class => 'show-recent-clicks'
    or <br>
  %table.with-border
    %thead
      - has_user_column = permitted_to?(:view_pub_user_account, :dashboard_tools)
      - num_columns = has_user_column ? 7 : 6
      %tr
        %th{:colspan => num_columns, :style => "text-align: center;"}
          - text = "Clicks from #{@start_date.to_s(:pub)} - #{@end_date.to_s(:pub)}"
          %b= text
      %tr
        %td Clicked
        %td Installed
        %td Adv.
        %td Pub.
        - if has_user_column
          %td User
        %td Resolve
        %td Details
    %tbody
      - @clicks.each do |click|
        - reward = @rewards[click.reward_key]
        %tr{ :class => click_tr_class(click, reward) }
          %td.small
            %nobr= click_timestamp(click, :clicked_at)
          %td{ :class => install_td_class(click) }
            = link_install_to_attempt(click)
          %td= link_app_to_statz(@click_apps[click.advertiser_app_id])
          %td= link_app_to_statz(@click_apps[click.publisher_app_id])
          - if has_user_column
            %td= link_to(click.publisher_user_id, view_pub_user_account_tools_path(:publisher_app_id => click.publisher_app_id, :publisher_user_id => click.publisher_user_id))
          %td
            - if click.force_convert && click.installed_at?
              Force converted
            - elsif click.manually_resolved_at? && click.installed_at?
              Manually awarded
            - elsif click.installed_at? || click.type =~ /install_jailbroken/
              Already awarded
            - elsif click.block_reason?
              - if click.block_reason =~ /TooManyUdidsForPublisherUserId/
                Blocked device
              - else
                Won't reward
              - if permitted_to?(:force_conversion, :dashboard_tools)
                = form_tag force_conversion_tools_path(:click_key => click.id) do
                  = submit_tag 'Force'
            - else
              = form_tag resolve_clicks_tools_path(:click_id => click.id) do
                = submit_tag 'Award'
          %td.small
            %ul.nobr
              %li= "Click ID: #{click.key}"
              - if reward
                %li= "Reward ID: #{reward.key}"
              %li= link_to('show more', '#', :class => 'show-click-detail')
              - click_info_ul(click, reward)
      %tr
        %td{:colspan => num_columns}
        #dates_range
          - next_start_date = (@start_date - Device::RECENT_CLICKS_RANGE).strftime("%m/%d/%Y")
          - next_end_date = @start_date.strftime("%m/%d/%Y")
          = text_field_tag(:start_date, next_start_date, {:id => 'start_date', :size => 10})
          \-
          = text_field_tag(:end_date, next_end_date, {:id => 'end_date', :size => 10})
          = submit_tag "Update", {:class => 'search-clicks', :onclick => '#'}

.hidden
  #help_opt_out_offer_types_content{ :name => 'Opt Out Offer Types' } Opt the device out of specific offers only. The user will be considered for all offers, except for those selected here.

- content_for :page_head, stylesheet_link_tag('tools')

- content_for :page_javascript do
  :plain
    $(function($){
      $('#show_more_apps').click(function(){
        $(this).hide();
        $('.last_run_app').show();
        return false;
      });
      $('.show-click-detail').click(function(){
        $(this).parent().hide();
        details = $(this).parent().next();
        $(this).parent().after(details.html());
        details.remove();
        return false;
      });
    });

    $(function() {
      $('#start_date').datepicker();
      $('#end_date').datepicker();
    });

  - if @device
    - use_recent_clicks_param = "#{params[:use_recent_clicks] ? '&use_recent_clicks=1' : ''}"
    :plain
      $(function($){
        $('.show-recent-clicks').click(function(){
          location.href = '#{device_info_tools_path(:udid => @device.key)}' + '#{use_recent_clicks_param}'
          return false;
        });
      });

      $(function($){
        $('.search-clicks').click(function(){
          var start_date = $('#start_date').val();
          var end_date = $('#end_date').val();
          location.href = '?udid=#{@device.key}' + '&' + 'start_date=' + start_date + '&' + 'end_date=' + end_date + '#{use_recent_clicks_param}'
          return false;
        });
      });

- content_for :page_styles do
  :plain
    #start_date {font-size: 16px; }
    #end_date   {font-size: 16px; }
