- @page_title = 'Payouts'

%h1 Payouts

%h3
  Payout Freeze Status:
  - if @freeze_enabled
    %span{ :class => 'enabled' } Enabled
  - else
    %span{ :class => 'disabled' } Disabled
  - if permitted_to? :index, :dashboard_tools_payout_freezes
    = link_to '[modify]', tools_payout_freezes_path

- if @start_date.present?
  %h3
    For resellers with payout info modified between
    = @start_date.to_s(:pub)
    and
    = @end_date.to_s(:pub)

#filtered.hidden
  Information updated in:
  = select_date(@start_date || Time.zone.now, :discard_day => true, :start_year => 2011, :end_year => Time.zone.now.year)
  = submit_tag('Update', :id => :date_submit)
  = submit_tag('Reset', :id => :date_reset)
#unfiltered.hidden
  = link_to 'Filter by payout info modification', '#'
= form_tag(export_tools_resellers_payouts_path, :method => :get) do
  = submit_tag('Export to CSV', :id => :export, :action => export_tools_resellers_payouts_path)

%table
  %thead
    %tr
      %th Partner
      %th Pending Earnings
      %th Payout Amount
      %th Current Payout Created
      %th Action
  %tbody
    - @resellers.each do |reseller|
      %tr
        %td
          %strong Partner Name:
          = reseller.name
          %br/
          %strong ID:
          = link_to reseller.id, tools_payouts_path(:reseller_id => reseller.id)

        %td= number_to_currency(reseller.pending_earnings / 100.0)
        %td= number_to_currency(reseller.pending_earnings / 100.0 - reseller.next_payout_amount / 100.0)
        %td= number_to_currency(reseller.next_payout_amount / 100.0)
        %td= link_to 'Manage Payouts', tools_payouts_path(:reseller_id => reseller.id)

%div{ :class => 'popup', :style => 'display:none'}
- content_for :page_javascript do
  :plain
    $(function($) {
      if (#{@start_date.blank?}) {
        $('#unfiltered').show();
      } else {
        $('#filtered').show();
      }
      $('#unfiltered a').click(function(){
        $('#unfiltered').hide();
        $('#filtered').show();
        return false;
      });
      $('#date_submit').click(function(){
        var year = $('select#date_year').val();
        var month = $('select#date_month').val();
        location.href = location.href.split('?')[0] + '?year=' + year + '&month=' + month;
      });
      $('#date_reset').click(function(){
        $('#filtered').hide();
        if (#{@start_date.present?}) {
          location.href = location.href.split('?')[0];
        } else {
          $('#unfiltered').show();
        }
      });

      $('#date').datepicker();
      $('form.json').submit(function() {
        if (!confirm('Are you sure?')) { return false; }

        var spinner = $(this).find('img.spinner');
        var submit = $(this).find('input.submit');
        var amount = $(this).find('input.amount');
        var status = $(this).find('span.status');

        $.ajax({
          dataType: 'json',
          type: $(this).attr('method'),
          url: $(this).attr('action'),
          data: $(this).serialize(),
          beforeSend: function() {
            amount.hide();
            submit.hide();
            spinner.show();
          },
          complete: function() {
            spinner.hide();
          },
          success: function(response) {
            if (response.success == true) {
              status.html('Complete');
            } else {
              status.html('Error');
            }
          }
        });
        return false;
      });
    });

- content_for :page_styles do
  :plain
    #main {
      width: 1200px;
    }
    table {
      border-collapse: collapse;
    }
    th, td {
      border: 1px solid gray;
      padding: 5px;
      font-size: 12px;
    }

    span.enabled {
      color: green;
    }

    span.disabled {
      color: red;
    }

    h3 a {
      text-decoration: none;
      font-size: 14px;
    }
