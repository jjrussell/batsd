- @page_title = 'Virtual currency'

- form_for [@app, @currency] do |f|
  %table
    %tr
      %th Name
      %td
        = f.text_field :name, :init => @currency.name.to_s
        = error_message_on(@currency, :name) if @currency.errors.on :name
    %tr
      %th Conversion rate
      %td 
        = f.text_field :conversion_rate, :init => @currency.conversion_rate
        = error_message_on(@currency, :conversion_rate) if @currency.errors.on :conversion_rate
    %tr
      %th Managed by Tapjoy
      %td= check_box_tag(:managed_by_tapjoy, nil, @currency.callback_url == Currency::TAPJOY_MANAGED_CALLBACK_URL)
    %tr.managed
      %th Initial balance
      %td
        = f.text_field :initial_balance, :init => @currency.initial_balance
        = error_message_on(@currency, :initial_balance) if @currency.errors.on :initial_balance
    %tr.unmanaged
      %th Callback url
      %td
        = f.text_field :callback_url, :init => @currency.callback_url.to_s
        = error_message_on(@currency, :callback_url) if @currency.errors.on :callback_url
    %tr.unmanaged
      %th Secret key
      %td
        = f.text_field :secret_key, :init => @currency.secret_key.to_s
        = error_message_on(@currency, :secret_key) if @currency.errors.on :secret_key
    %tr
      %th Test devices
      %td
        = f.text_field :test_devices, :init => @currency.test_devices
        = error_message_on(@currency, :test_devices) if @currency.errors.on :test_devices
    %tr
      %td &nbsp;
      %td= f.submit
  
- content_for :page_javascript do
  :plain
    var numChanged = 0;
  
    $(function() {
      $('input').each(function() {
        if ($(this).val() != $(this).attr('init')) {
          $(this).addClass('changed');
          numChanged += 1;
        } else {
          $(this).removeClass('changed');
          numChanged -= 1;
        }
      });
    
      $('input').focus(function() {
        $(this).addClass('active');
      });
      
      $('input').blur(function() {
        $(this).removeClass('active');
        if ($(this).val() != $(this).attr('init')) {
          $(this).addClass('changed');
          numChanged += 1;
        } else {
          $(this).removeClass('changed');
          numChanged -= 1;
        }
      });
      
      toggleManagedByTapjoy();
      
      $('#managed_by_tapjoy').change(function() {
        toggleManagedByTapjoy();
      });
    });
    
    function toggleManagedByTapjoy() {
    
      if ($('#managed_by_tapjoy').attr('checked')) {
        $('.managed').show();
        $('.unmanaged').hide();
      } else {
        $('.managed').hide();
        $('.unmanaged').show();
      }
    }
  
- content_for :page_styles do
  :plain
    th {
      text-align: right;
    }
    
    input[type=text] {
      border:1px solid transparent;
      font-size: 16px;
      width: 400px;
    }
    
    input[type=text].active,
    input[type=text]:hover {
      border: 1px solid black;
    }
    
    input[type=text].changed {
      background-color: #ccc;
    }
    
    .managed {
      #{'display: none;' unless @currency.callback_url == Currency::TAPJOY_MANAGED_CALLBACK_URL}
    }

    .unmanaged {
      #{'display: none;' if @currency.callback_url == Currency::TAPJOY_MANAGED_CALLBACK_URL}
    }
    
    .fieldWithErrors,
    .formError {
      display: inline;
    }
    
    .formError {
      color: red;
    }