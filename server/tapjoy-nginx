# File: /etc/nginx/sites-enabled/tapjoy

# Mostly yanked from:
# http://bit.ly/nginx-unicorn-setup
# borrowed from: http://tomkersten.com/articles/nginx-unicorn-rvm-server-setup/

upstream tapjoy {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).
  server unix:/tmp/tapjoy.socket fail_timeout=0;
}

server {
  listen       9898 default;

  #charset koi8-r;

  root /home/webuser/tapjoyserver/tapjoyads;
  access_log /var/log/nginx/tapjoy.log;
  error_log /var/log/nginx/tapjoy.log;
  rewrite_log on;

  location / {
    proxy_pass http://tapjoy;
    proxy_redirect     off;

    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

    client_max_body_size       10m;
    client_body_buffer_size    128k;

    proxy_connect_timeout      90;
    proxy_send_timeout         90;
    proxy_read_timeout         90;

    proxy_buffer_size          4k;
    proxy_buffers              4 32k;
    proxy_busy_buffers_size    64k;
    proxy_temp_file_write_size 64k;

    index  index.html index.htm;
  }

  # if the request is for a static resource, nginx should serve it directly
  # and add a far future expires header to it, making the browser
  # cache the resource and navigate faster over the website
  #location ~ ^/(images|javascripts|stylesheets|system)/  {
  #  root /web_apps/example_app;
  #  expires max;
  #  break;
  #}

  #error_page  404              /404.html;

  # redirect server error pages to the static page /50x.html
  #
  error_page   500 502 503 504  /50x.html;
}
