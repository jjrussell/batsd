#!/usr/bin/env ruby

hostname = `hostname`.strip
wait_time = ARGV[0] ? ARGV[0].to_i : 5
def colorize text, color_code
  "#{color_code}#{text}\033[0m"
end
def red text; colorize text, "\033[31m"; end
def green text; colorize text, "\033[32m"; end
def yellow text; colorize text, "\033[33m"; end

def determine_private_dirty_rss(pid)
  total = 0
  File.read("/proc/#{pid}/smaps").split("\n").each do |line|
    line =~ /^(Private)_Dirty: +(\d+)/
    total += $2.to_i if $2
  end
  return total == 0 ? nil : total
rescue Errno::EACCES, Errno::ENOENT
  return nil
end

while true
  out = ""
  out << "HOST: #{hostname}\n\n"

  out << "\nUnicorn Memory Usage\n\n"
  ps = `ps aux | grep unicorn_rails | grep -v grep | awk '{print $2 " " $10 " " $3 " " $12}'`.split("\n")
  ps.each do |p|
    pid, time, cpu, name = p.split
    mem = determine_private_dirty_rss(pid).to_f/1024.0

    line = ""
    line << name.rjust(10) + " "
    line << pid + ": "
    line << "#{("%.3f" % mem).rjust(8)} MB "
    line << cpu.rjust(5) + "% CPU"
    line << time.rjust(6) + "h"

    line << "\n"
    if mem >= 400
      out << red(line)
    elsif mem >= 300
      out << yellow(line)
    else
      out << green(line)
    end
  end

  out << "\nNGinx Status\n\n"
  out << "ps aux | grep -v grep | grep nginx"
  out << "\n"
  out << `curl http://localhost/nginx_status 2>/dev/null`
  out << "\n"

  out << "\nGeneral Memory\n\n"
  out << `free -m`
  out << "\n"

  out << "\nLast ten unicorn reloads - (now: #{`date`.strip})\n"
  out << `tail /mnt/log/unicorn_reloads.log`
  out << "\n"

  puts "\e[H\e[2J"
  puts out

  sleep wait_time
end

